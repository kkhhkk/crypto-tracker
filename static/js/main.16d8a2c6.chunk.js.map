{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart2.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","a","fetch","json","coinId","fetchCoinTickers","endDate","Math","floor","Date","now","startDate","setDate","CalsetDate","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","textColor","accentColor","Title","h1","Loading","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","rank","src","symbol","toLowerCase","Chart2","chartMatch1Y","useRouteMatch","useParams","fetchChartHistorical","value","changeSetDate","type","series","price","x","time_close","y","open","toFixed","high","low","close","options","mode","chart","width","height","background","toolbar","show","title","text","align","xaxis","categories","date","labels","style","fontSize","axisTicks","stroke","curve","tooltip","enabled","plotOptions","candlestick","colors","upward","downward","ChartBar","Tab","isActive","Chart","chartMatch3M","chartMatch1M","chartMatch14d","chartMatch7d","fetchCoinHistorical","path","Overview","PriceLists","PriceList","Tag","h3","Span","Text","isPositive","checkBoolen","Price","maxPrice","quotes","USD","ath_price","curPrice","maxPercent","console","log","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","CoinInfoBlock","CoinInfo","Tabs","Back","useLocation","chartMatch","priceMatch","fetchCoinInfo","infoLoading","infoData","refetchInterval","tickersLoading","tickersData","loading","ath_date","Router","basename","process","GlobalStyle","createGlobalStyle","bgColor","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.16d8a2c6.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\n\nexport async function fetchCoins() {\n  return await (await fetch(`${BASE_URL}/coins`)).json();\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  return await (await fetch(`${BASE_URL}/coins/${coinId}`)).json();\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  return await (await fetch(`${BASE_URL}/tickers/${coinId}`)).json();\n}\n\nexport async function fetchCoinHistorical(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 52;\n  return await (\n    await fetch(\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n    )\n  ).json();\n}\n\nexport async function fetchCoinPrice(coinId: string) {\n  return await (await fetch(`${BASE_URL}/tickers/${coinId}/historical`)).json();\n}\n\nexport async function fetchChartHistorical(coinId: string, setDate: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  function CalsetDate(setDate: string) {\n    if (setDate === \"1y\") {\n      return 365;\n    } else if (setDate === \"3m\") {\n      return 93;\n    } else if (setDate === \"1m\") {\n      return 31;\n    } else if (setDate === \"14d\") {\n      return 14;\n    } else {\n      return 7;\n    }\n  }\n  const startDate = endDate - 60 * 60 * 24 * CalsetDate(setDate);\n  return await (\n    await fetch(\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n    )\n  ).json();\n}\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: \"transparent\";\n  color: ${(props) => props.theme.textColor};\n  border: 1px solid white;\n  font-size: 15px;\n  border-radius: 20px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n      padding: 25px;\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 40px;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 48px;\n`;\n\nconst Img = styled.img`\n  width: 25px;\n  height: 25px;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\ninterface ICoins {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoins[]>(\"allCoins\", fetchCoins);\n  //   const [coins, setCoins] = useState<ICoins[]>([]);\n  //   const [loading, setLoading] = useState(true);\n  //   useEffect(() => {\n  //     (async () => {\n  //       const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //       const json = await response.json();\n  //       setCoins(json.slice(0, 100));\n  //       setLoading(false);\n  //     })();\n  //   }, []);\n  return (\n    <Container>\n      <Helmet>\n        <title>Crpyto</title>\n      </Helmet>\n      <Header>\n        <Title>Crpyto</Title>\n      </Header>\n      {isLoading ? (\n        <Loading>Loading...</Loading>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 200).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                {coin.rank} :{\" \"}\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} ( {coin.symbol} ) &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { useQuery } from \"react-query\";\nimport { fetchChartHistorical } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useParams, useRouteMatch } from \"react-router-dom\";\n\ninterface IChartData {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface Chart2Props {\n  coinId: string;\n}\n\ninterface DateParams {\n  setDate: string;\n}\n\nfunction changeSetDate(value: string) {\n  if (value === \"3m\") {\n    return \"3M\";\n  } else if (value === \"1m\") {\n    return \"1M\";\n  } else {\n    return value;\n  }\n}\n\nfunction Chart2({ coinId }: Chart2Props) {\n  const chartMatch1Y = useRouteMatch(\"/:coinId/chart/1y\");\n  const { setDate } = useParams<DateParams>();\n  const { isLoading, data } = useQuery<IChartData[]>(\n    [`ohlcv${setDate}}`, coinId],\n    () => fetchChartHistorical(coinId, setDate)\n  );\n  const value = changeSetDate(setDate);\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Chart Loading...\"\n      ) : chartMatch1Y === null ? (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => ({\n                x: price.time_close.slice(5, 10),\n                y: [\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2),\n                ],\n              })),\n            },\n          ]}\n          options={{\n            theme: { mode: \"dark\" },\n            chart: {\n              type: \"candlestick\",\n              width: 500,\n              height: 500,\n              background: \"transparent\",\n              toolbar: {\n                show: false,\n              },\n            },\n            title: {\n              text: `Chart of ${value} - Daily close price`,\n              align: \"left\",\n            },\n            xaxis: {\n              categories: [data?.map((date) => date.time_close.slice(5, 10))],\n              labels: {\n                style: {\n                  fontSize: \"11px\",\n                },\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n            },\n\n            stroke: {\n              curve: \"smooth\",\n              width: 1,\n            },\n            tooltip: {\n              enabled: true,\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#e84118\",\n                  downward: \"#0097e6\",\n                },\n              },\n            },\n          }}\n        />\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default Chart2;\n","import { Switch, Route, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistorical } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\nimport Chart2 from \"./Chart2\";\n\nconst ChartBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst Tab = styled.div<{ isActive: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 10px 5px 10px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n`;\n\ninterface IChartData {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const chartMatch1Y = useRouteMatch(\"/:coinId/chart/1y\");\n  const chartMatch3M = useRouteMatch(\"/:coinId/chart/3m\");\n  const chartMatch1M = useRouteMatch(\"/:coinId/chart/1m\");\n  const chartMatch14d = useRouteMatch(\"/:coinId/chart/14d\");\n  const chartMatch7d = useRouteMatch(\"/:coinId/chart/7d\");\n  const { isLoading, data } = useQuery<IChartData[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistorical(coinId)\n  );\n\n  return (\n    <div>\n      <ChartBar>\n        <Tab isActive={chartMatch1Y !== null}>\n          <Link to={`/${coinId}/chart/1y`}>1Y</Link>\n        </Tab>\n        <Tab isActive={chartMatch3M !== null}>\n          <Link to={`/${coinId}/chart/3m`}>3M</Link>\n        </Tab>\n        <Tab isActive={chartMatch1M !== null}>\n          <Link to={`/${coinId}/chart/1m`}>1M</Link>\n        </Tab>\n        <Tab isActive={chartMatch14d !== null}>\n          <Link to={`/${coinId}/chart/14d`}>14d</Link>\n        </Tab>\n        <Tab isActive={chartMatch7d !== null}>\n          <Link to={`/${coinId}/chart/7d`}>7d</Link>\n        </Tab>\n      </ChartBar>\n      {isLoading ? (\n        \"\"\n      ) : chartMatch1Y !== null ? (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => ({\n                x: price.time_close.slice(5, 10),\n                y: [\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2),\n                ],\n              })),\n            },\n          ]}\n          options={{\n            theme: { mode: \"dark\" },\n            chart: {\n              width: 500,\n              height: 500,\n              background: \"transparent\",\n              toolbar: {\n                show: false,\n              },\n            },\n            colors: data?.map((price) =>\n              price.open - price.close > 0 ? `#e84118` : `#00a8ff`\n            ),\n            title: {\n              text: \"Chart of 1Y - Daily close price\",\n              align: \"left\",\n            },\n            xaxis: {\n              categories: [data?.map((date) => date.time_close.slice(5, 10))],\n              labels: {\n                style: {\n                  fontSize: \"11px\",\n                },\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 1,\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#e84118\",\n                  downward: \"#0097e6\",\n                },\n              },\n            },\n          }}\n        />\n      ) : (\n        <></>\n      )}\n      <Switch>\n        <Route path={`/:coinId/chart/:setDate`}>\n          <Chart2 coinId={coinId} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\nconst Overview = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst PriceLists = styled.ul`\n  width: 90%;\n`;\n\nconst PriceList = styled.li`\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${(props) => props.theme.textColor};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  border-radius: 20px;\n  margin-bottom: 10px;\n  padding: 15px;\n  justify-content: space-around;\n`;\n\nconst Tag = styled.h3`\n  font-size: 15px;\n  font-weight: 900;\n`;\n\nconst Span = styled.h3`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Text = styled.h3<{ isPositive?: Boolean }>`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.isPositive ? \"red\" : \"blue\")};\n`;\n\ninterface TickersData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId: string;\n}\n\nfunction checkBoolen(value: any) {\n  if (value > 0) {\n    return true;\n  }\n  return false;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<TickersData>([\"price\", coinId], () =>\n    fetchCoinTickers(coinId)\n  );\n  const maxPrice: any = data?.quotes.USD.ath_price;\n  const curPrice: any = data?.quotes.USD.price;\n  const maxPercent: any = (((curPrice - maxPrice) / maxPrice) * 100).toFixed(2);\n  console.log(maxPrice, curPrice);\n  return (\n    <div>\n      {isLoading ? (\n        \"Chart Loading...\"\n      ) : (\n        <>\n          <Overview>\n            <PriceLists>\n              <PriceList>\n                <Tag>Price :</Tag>\n                <Span>${data?.quotes.USD.price.toFixed(2)}</Span>\n              </PriceList>\n              <PriceList>\n                <Tag>Curr / Max :</Tag>\n                <Text isPositive={checkBoolen(maxPercent)}>{maxPercent}%</Text>\n              </PriceList>\n              <PriceList>\n                <Tag>Change_24h :</Tag>\n                <Text\n                  isPositive={checkBoolen(data?.quotes.USD.percent_change_24h)}\n                >\n                  {data?.quotes.USD.percent_change_24h}%\n                </Text>\n              </PriceList>\n              <PriceList>\n                <Tag>Change_7d :</Tag>\n                <Text\n                  isPositive={checkBoolen(data?.quotes.USD.percent_change_7d)}\n                >\n                  {data?.quotes.USD.percent_change_7d}%\n                </Text>\n              </PriceList>\n              <PriceList>\n                <Tag>Change_1M :</Tag>\n                <Text\n                  isPositive={checkBoolen(data?.quotes.USD.percent_change_30d)}\n                >\n                  {data?.quotes.USD.percent_change_30d}%\n                </Text>\n              </PriceList>\n              <PriceList>\n                <Tag>Change_1Y :</Tag>\n                <Text\n                  isPositive={checkBoolen(data?.quotes.USD.percent_change_1y)}\n                >\n                  {data?.quotes.USD.percent_change_1y}%\n                </Text>\n              </PriceList>\n            </PriceLists>\n          </Overview>\n        </>\n      )}\n    </div>\n  );\n}\nexport default Price;\n","import { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 40px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Img = styled.img`\n  width: 45px;\n  height: 45px;\n  margin-right: 10px;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 48px;\n`;\n\nconst CoinInfoBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 15px 20px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n\nconst CoinInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 15px;\n\n  span:first-child {\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Tab = styled.div<{ isActive: boolean }>`\n  display: flex;\n  justify-content: center;\n  width: 49%;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 20px;\n  padding: 10px;\n  margin-bottom: 15px;\n  font-weight: 400;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n    padding: 2.5px 80px;\n  }\n`;\n\nconst Back = styled.div`\n  font-size: 30px;\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\ninterface RouteParmas {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface TickersData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParmas>();\n  const { state } = useLocation<RouteState>();\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const {\n    isLoading: tickersLoading,\n    data: tickersData,\n  } = useQuery<TickersData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  //     const [loading, setLoading] = useState(true);\n  //     const [info, setInfo] = useState<InfoData>();\n  //     const [priceInfo, setPriceInfo] = useState<PriceData>();\n  //   useEffect(() => {\n  //     (async () => {\n  //       const infoData = await (\n  //         await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //       ).json();\n  //       console.log(infoData);\n  //       const priceData = await (\n  //         await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //       ).json();\n  //       console.log(priceData);\n  //       setInfo(infoData);\n  //       setPriceInfo(priceData);\n  //       setLoading(false);\n  //     })();\n  //   }, [coinId]);\n\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Back>\n        <Link to=\"/\">🏠</Link>\n      </Back>\n      <Header>\n        <Title>\n          <Img\n            src={`https://cryptoicon-api.vercel.app/api/icon/${infoData?.symbol.toLowerCase()}`}\n          />\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loading>Loading...</Loading>\n      ) : (\n        <>\n          <CoinInfoBlock>\n            <CoinInfo>\n              <span>Rank</span>\n              <span>{infoData?.rank}</span>\n            </CoinInfo>\n            <CoinInfo>\n              <span>Symbol</span>\n              <span>{infoData?.symbol}</span>\n            </CoinInfo>\n          </CoinInfoBlock>\n          <CoinInfoBlock>\n            <CoinInfo>\n              <span>Max Price Date</span>\n              <span>{tickersData?.quotes.USD.ath_date.slice(0, 10)}</span>\n            </CoinInfo>\n            <CoinInfo>\n              <span>Max Price</span>\n              <span>${tickersData?.quotes.USD.ath_price.toFixed(2)}</span>\n            </CoinInfo>\n            <CoinInfo>\n              <span>Current Price</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(2)}</span>\n            </CoinInfo>\n          </CoinInfoBlock>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart/1y`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n          </Switch>\n          <Switch>\n            <Route path={`/:coinId/chart/`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n*{\n  box-sizing : border-box;\n}\nbody {\n  font-family : 'Source Sans Pro', sans-serif;\n  background-color : ${(props) => props.theme.bgColor};\n  color : ${(props) => props.theme.textColor};\n\n}\na {\n  text-decoration : none;\n  color : inherit;\n}\n`;\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { theme } from \"./theme\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n      <ReactQueryDevtools initialIsOpen={true} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  textColor: \"#f5f6fa\",\n  bgColor: \"#2f3640\",\n  accentColor: \"#44bd32\",\n};\n"],"sourceRoot":""}